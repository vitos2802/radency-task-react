{"version":3,"sources":["components/TodoList/TodoList.module.css","components/Todo/Todo.module.css","components/StatsList/StatsList.module.css","components/TodoEditor/TodoEditor.module.css","components/StatsTodo/StatsTodo.module.css","components/Modal/Modal.module.css","components/ArchivedList/ArchivedList.module.css","components/Container/Container.module.css","components/Button/Button.module.css","helpers/date.js","redux/todos/todos-actions.js","redux/todos/todos-reducer.js","redux/store.js","components/Container/Container.js","components/Button/Button.js","helpers/generateIcon.js","components/Todo/Todo.js","redux/todos/todos-selectors.js","components/TodoList/TodoList.js","components/Modal/Modal.js","components/TodoEditor/TodoEditor.js","components/StatsTodo/StatsTodo.js","components/StatsList/StatsList.js","components/ArchivedList/ArchivedList.js","views/TodosView.js","App.js","index.js"],"names":["module","exports","formatDate","Date","toLocaleString","year","day","month","addTodo","createAction","name","content","category","payload","id","nanoid","created","dates","archived","editTodo","deleteTodo","updateTodo","toggleArchiveShow","todosActions","toggleArchived","toggleModal","initialState","icon","isModalOpen","createReducer","actions","state","_","isArchivedList","editedTodo","items","filter","map","el","todo","combineReducers","store","configureStore","reducer","todos","todosReducer","devTools","process","Container","children","className","styles","Button","onClick","button","type","generateIcon","mdiCartOutline","mdiHeadCog","mdiLightbulbOutline","Todo","onDelete","onArchive","onEdit","path","cell","btnBox","mdiPencil","mdiPackageDown","mdiDelete","mdiPackageUp","getTodos","selectors","getActiveTodos","getTodosStats","reduce","acc","obj","newObj","active","filterAcc","find","push","getEditedTodos","isModalOpened","getArchivedTodos","TodoList","useSelector","dispatch","useDispatch","list","listHead","color","item","onDeleteTodo","onArchiveTodo","onEditTodo","createBtn","modalRoot","document","querySelector","Modal","isArchiveList","createPortal","backdrop","e","currentTarget","target","TodoEditor","onSave","editedName","editedCategory","editedContent","editedId","editedCreated","useState","setName","setCategory","setContent","formatCreated","toLocaleDateString","dateUpdate","updateDates","handleChange","value","form","onSubmit","preventDefault","input","onChange","placeholder","select","textarea","StatsTodo","StatsList","todosStats","head","box","ArchivedList","archivedTodos","TodosView","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fdcbed73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoList_list__2rn3-\",\"listHead\":\"TodoList_listHead__48Tvy\",\"item\":\"TodoList_item__2GcPJ\",\"box\":\"TodoList_box__pgyrS\",\"icon\":\"TodoList_icon__1D7NT\",\"cell\":\"TodoList_cell__kZLaL\",\"btnBox\":\"TodoList_btnBox__3qp7M\",\"createBtn\":\"TodoList_createBtn__3yNs9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Todo_icon__2Pjf3\",\"cell\":\"Todo_cell__3EKgj\",\"btnBox\":\"Todo_btnBox__2ubLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"StatsList_head__326vu\",\"box\":\"StatsList_box__F03SH\",\"cell\":\"StatsList_cell__2C9yk\",\"todo\":\"StatsList_todo__3RALv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TodoEditor_form__3Lk4o\",\"input\":\"TodoEditor_input__3afv8\",\"select\":\"TodoEditor_select__3iX62\",\"textarea\":\"TodoEditor_textarea__2vm58\",\"texterea\":\"TodoEditor_texterea__2jTpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"StatsTodo_icon__1fPyb\",\"cell\":\"StatsTodo_cell__1mtUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2FFMy\",\"content\":\"Modal_content__22Nse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ArchivedList_list__1ySr1\",\"todo\":\"ArchivedList_todo__rRlLD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__ncIAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3DtBL\"};","let date = new Date();\n\nconst options = {\n  year: 'numeric',\n  day: 'numeric',\n  month: 'short',\n};\n\nconst formatDate = date.toLocaleString('en-US', options);\n\nexport default formatDate;\n","import { createAction } from '@reduxjs/toolkit';\nimport { nanoid } from 'nanoid';\nimport formatDate from '../../helpers/date';\n\nconst addTodo = createAction('todos/add', ({ name, content, category }) => ({\n  payload: {\n    id: nanoid(),\n    name,\n    created: formatDate,\n    content,\n    category,\n    dates: '',\n    archived: false,\n  },\n}));\n\nconst editTodo = createAction(\n  'todos/edit',\n  ({ id, name, content, category, dates, created }) => ({\n    payload: {\n      id,\n      name,\n      content,\n      category,\n      dates,\n      created,\n    },\n  }),\n);\n\nconst deleteTodo = createAction('todos/delete');\n\nconst updateTodo = createAction('todo/update');\nconst toggleArchiveShow = createAction('todos/toggleArchiveShow');\n\nconst toggleArchived = createAction('todos/toggleArchived');\nconst toggleModal = createAction('todos/toggleModal');\n\nconst todosActions = {\n  addTodo,\n  deleteTodo,\n  toggleArchived,\n  toggleModal,\n  editTodo,\n  updateTodo,\n  toggleArchiveShow,\n};\nexport default todosActions;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport actions from './todos-actions';\nimport formatDate from '../../helpers/date';\n\nconst initialState = [\n  {\n    id: 1,\n    icon: '',\n    name: 'Name',\n    created: formatDate,\n    category: 'Task',\n    content: 'How are you?',\n    dates: '',\n    archived: true,\n  },\n  {\n    id: 2,\n    icon: '',\n    name: 'Name 2',\n    created: 'Oct 9, 2021',\n    category: 'Random thought',\n    content: 'How are you?',\n    dates: '',\n    archived: false,\n  },\n\n  {\n    id: 3,\n    icon: '',\n    name: 'Name 3',\n    created: formatDate,\n    category: 'Random thought',\n    content: 'How are you?',\n    dates: '',\n    archived: false,\n  },\n  {\n    id: 4,\n    icon: '',\n    name: 'Name 2',\n    created: formatDate,\n    category: 'Idea',\n    content: 'How are you?',\n    dates: '',\n    archived: false,\n  },\n];\n\nconst isModalOpen = createReducer(false, {\n  [actions.toggleModal]: (state, _) => (state ? false : true),\n});\n\nconst isArchivedList = createReducer(false, {\n  [actions.toggleArchiveShow]: (state, _) => (state ? false : true),\n});\n\nconst editedTodo = createReducer(\n  {\n    id: null,\n    name: null,\n    content: null,\n    category: null,\n    dates: null,\n    created: null,\n  },\n  {\n    [actions.editTodo]: (state, { payload }) => {\n      state.id = payload.id;\n      state.name = payload.name;\n      state.content = payload.content;\n      state.category = payload.category;\n      state.dates = payload.dates;\n      state.created = payload.created;\n    },\n  },\n);\n\nconst items = createReducer(initialState, {\n  [actions.addTodo]: (state, { payload }) => [...state, payload],\n  [actions.deleteTodo]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [actions.updateTodo]: (state, { payload }) => {\n    return [...state].map(el =>\n      el.id === payload.id ? { ...el, ...payload } : el,\n    );\n  },\n  [actions.toggleArchived]: (state, { payload }) =>\n    state.map(todo =>\n      todo.id === payload ? { ...todo, archived: !todo.archived } : todo,\n    ),\n});\n\nexport default combineReducers({\n  items,\n  isModalOpen,\n  editedTodo,\n  isArchivedList,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport todosReducer from './todos/todos-reducer';\n\nconst store = configureStore({\n  reducer: {\n    todos: todosReducer,\n  },\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import styles from './Button.module.css';\n\nconst Button = ({ children, onClick }) => {\n  return (\n    <button className={styles.button} type=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { mdiCartOutline, mdiHeadCog, mdiLightbulbOutline } from '@mdi/js';\n\nconst generateIcon = category => {\n  let icon = '';\n\n  switch (category) {\n    case 'Task':\n      icon = mdiCartOutline;\n      break;\n    case 'Random thought':\n      icon = mdiHeadCog;\n      break;\n    case 'Idea':\n      icon = mdiLightbulbOutline;\n      break;\n\n    default:\n      break;\n  }\n\n  return icon;\n};\n\nexport default generateIcon;\n","import Icon from '@mdi/react';\nimport { mdiPencil, mdiPackageDown, mdiDelete, mdiPackageUp } from '@mdi/js';\nimport Button from '../Button';\nimport generateIcon from '../../helpers/generateIcon';\nimport styles from './Todo.module.css';\n\nconst Todo = ({\n  name,\n  created,\n  category,\n  content,\n  dates,\n  archived,\n  onDelete,\n  onArchive,\n  onEdit,\n}) => {\n  return (\n    <>\n      <div className={styles.icon}>\n        <Icon path={generateIcon(category)} />\n      </div>\n      <div className={styles.cell}>{name}</div>\n      <div className={styles.cell}>{created}</div>\n      <div className={styles.cell}>{category}</div>\n      <div className={styles.cell}>{content}</div>\n      <div className={styles.cell}>{dates}</div>\n      <div className={styles.btnBox}>\n        {!archived && (\n          <>\n            <Button onClick={onEdit}>\n              <Icon path={mdiPencil} />\n            </Button>\n            <Button onClick={onArchive}>\n              <Icon path={mdiPackageDown} />\n            </Button>\n            <Button onClick={onDelete}>\n              <Icon path={mdiDelete} />\n            </Button>\n          </>\n        )}\n        {archived && (\n          <Button onClick={onArchive}>\n            <Icon path={mdiPackageUp} />\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Todo;\n","import generateIcon from '../../helpers/generateIcon';\nimport { nanoid } from 'nanoid';\n\nconst getTodos = state => state.todos.items;\nconst getEditedTodos = state => state.todos.editedTodo;\nconst isModalOpened = state => state.todos.isModalOpen;\nconst isArchivedList = state => state.todos.isArchivedList;\n\nconst getActiveTodos = state => {\n  const todos = getTodos(state);\n  const activeTodos = todos.filter(todo => todo.archived === false);\n  return activeTodos;\n};\n\nconst getTodosStats = state => {\n  const todos = getTodos(state);\n  return todos.reduce((acc, obj) => {\n    const newObj = {\n      id: nanoid(),\n      icon: generateIcon(obj.category),\n      category: obj.category,\n      active: 0,\n      archived: 0,\n    };\n\n    obj.archived ? (newObj.archived += 1) : (newObj.active += 1);\n\n    const filterAcc = acc.find(obj => obj.category === newObj.category);\n\n    if (filterAcc && filterAcc.category === obj.category) {\n      obj.archived ? (filterAcc.archived += 1) : (filterAcc.active += 1);\n    } else {\n      acc.push(newObj);\n    }\n\n    return acc;\n  }, []);\n};\n\nconst getArchivedTodos = state => {\n  const todos = getTodos(state);\n  const archivedTodos = todos.filter(todo => todo.archived === true);\n  return archivedTodos;\n};\n\nconst selectors = {\n  getTodos,\n  getActiveTodos,\n  getTodosStats,\n  getEditedTodos,\n  isModalOpened,\n  getArchivedTodos,\n  isArchivedList,\n};\n\nexport default selectors;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Icon from '@mdi/react';\nimport { mdiPackageDown, mdiDelete } from '@mdi/js';\nimport todosActions from '../../redux/todos/todos-actions';\nimport Button from '../Button';\nimport Todo from '../Todo';\nimport selectors from '../../redux/todos/todos-selectors';\n\nimport styles from './TodoList.module.css';\n\nconst TodoList = ({ onClick }) => {\n  const todos = useSelector(selectors.getActiveTodos);\n\n  const dispatch = useDispatch();\n  const toggleModal = () => {\n    dispatch(todosActions.toggleModal());\n    dispatch(todosActions.toggleArchiveShow());\n  };\n\n  const onDeleteTodo = id => dispatch(todosActions.deleteTodo(id));\n  const onArchiveTodo = id => dispatch(todosActions.toggleArchived(id));\n  const onEditTodo = ({ id, name, content, category, created, dates }) => {\n    dispatch(todosActions.toggleModal());\n    dispatch(\n      todosActions.editTodo({ id, name, content, category, created, dates }),\n    );\n  };\n  return (\n    <div className={styles.list}>\n      <div className={styles.listHead}>\n        <div className={styles.icon}></div>\n        <div className={styles.cell}>Name</div>\n        <div className={styles.cell}>Created</div>\n        <div className={styles.cell}>Category</div>\n        <div className={styles.cell}>Content</div>\n        <div className={styles.cell}>Dates</div>\n        <div className={styles.btnBox}>\n          <Button onClick={toggleModal}>\n            <Icon path={mdiPackageDown} color=\"#fff\" />\n          </Button>\n          <span className={styles.icon}>\n            <Icon path={mdiDelete} color=\"#fff\" />\n          </span>\n        </div>\n      </div>\n      <ul>\n        {todos.map(\n          ({ id, name, created, category, content, dates, archived }) => {\n            return (\n              <li key={id} className={styles.item}>\n                <Todo\n                  name={name}\n                  created={created}\n                  category={category}\n                  content={content}\n                  dates={dates}\n                  archived={archived}\n                  onDelete={() => onDeleteTodo(id)}\n                  onArchive={() => onArchiveTodo(id)}\n                  onEdit={() =>\n                    onEditTodo({ id, name, category, content, created, dates })\n                  }\n                />\n              </li>\n            );\n          },\n        )}\n      </ul>\n      <button className={styles.createBtn} type=\"button\" onClick={onClick}>\n        Create todo\n      </button>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport todosActions from '../../redux/todos/todos-actions';\nimport selectors from '../../redux/todos/todos-selectors';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children }) => {\n  const dispatch = useDispatch();\n  const isArchiveList = useSelector(selectors.isArchivedList);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      if (isArchiveList) {\n        dispatch(todosActions.toggleArchiveShow());\n      }\n      dispatch(todosActions.toggleModal());\n\n      dispatch(\n        todosActions.editTodo({\n          id: null,\n          name: null,\n          category: null,\n          content: null,\n        }),\n      );\n    }\n  };\n\n  return createPortal(\n    <div className={styles.backdrop} onClick={handleBackdropClick}>\n      <div className={styles.content}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport todosActions from '../../redux/todos/todos-actions';\nimport selectors from '../../redux/todos/todos-selectors';\nimport styles from './TodoEditor.module.css';\n\nconst TodoEditor = ({ onSave }) => {\n  const dispatch = useDispatch();\n\n  const {\n    name: editedName,\n    category: editedCategory,\n    content: editedContent,\n    id: editedId,\n    created: editedCreated,\n  } = useSelector(selectors.getEditedTodos);\n\n  const [name, setName] = useState(editedName ? editedName : '');\n  const [category, setCategory] = useState(\n    editedCategory ? editedCategory : 'Task',\n  );\n  const [content, setContent] = useState(editedContent ? editedContent : '');\n\n  const formatCreated = new Date(editedCreated).toLocaleDateString('en-AU');\n  const dateUpdate = new Date().toLocaleDateString('en-AU');\n  const updateDates = `${formatCreated}, ${dateUpdate}`;\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'category':\n        setCategory(value);\n        break;\n      case 'content':\n        setContent(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setCategory('');\n    setContent('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    editedName\n      ? dispatch(\n          todosActions.updateTodo({\n            id: editedId,\n            name,\n            content,\n            category,\n            dates: updateDates,\n            created: editedCreated,\n          }),\n        )\n      : dispatch(todosActions.addTodo({ name, content, category }));\n\n    resetForm();\n    onSave();\n    editedName &&\n      dispatch(\n        todosActions.editTodo({\n          id: null,\n          name: null,\n          category: null,\n          content: null,\n        }),\n      );\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"Name\"\n      />\n\n      <select\n        name=\"category\"\n        className={styles.select}\n        value={category}\n        onChange={handleChange}\n      >\n        <option value=\"Task\">Task</option>\n        <option value=\"Random thought\">Random thought</option>\n        <option value=\"Idea\">Idea</option>\n      </select>\n\n      <textarea\n        name=\"content\"\n        className={styles.textarea}\n        onChange={handleChange}\n        placeholder=\"Content\"\n        value={content}\n      ></textarea>\n\n      <button>{!editedName ? 'Create' : 'Save'}</button>\n    </form>\n  );\n};\n\nexport default TodoEditor;\n","import Icon from '@mdi/react';\nimport styles from './StatsTodo.module.css';\n\nconst StatsTodo = ({ icon, category, active, archived }) => {\n  return (\n    <>\n      <div className={styles.icon}>\n        <Icon path={icon} />\n      </div>\n      <div className={styles.cell}>{category}</div>\n      <div className={styles.cell}>{active}</div>\n      <div className={styles.cell}>{archived}</div>\n    </>\n  );\n};\n\nexport default StatsTodo;\n","import { useSelector } from 'react-redux';\nimport selectors from '../../redux/todos/todos-selectors';\nimport StatsTodo from '../StatsTodo/StatsTodo';\nimport styles from './StatsList.module.css';\n\nconst StatsList = () => {\n  const todosStats = useSelector(selectors.getTodosStats);\n\n  return (\n    <div>\n      <div className={styles.head}>\n        <div className={styles.box}></div>\n        <div className={styles.cell}>Category</div>\n        <div className={styles.cell}>Active</div>\n        <div className={styles.cell}>Archived</div>\n      </div>\n      <ul>\n        {todosStats.map(({ id, icon, category, active, archived }) => {\n          return (\n            <li key={id} className={styles.todo}>\n              <StatsTodo\n                icon={icon}\n                category={category}\n                active={active}\n                archived={archived}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default StatsList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport selectors from '../../redux/todos/todos-selectors';\nimport Todo from '../Todo';\nimport todosActions from '../../redux/todos/todos-actions';\nimport styles from './ArchivedList.module.css';\nimport Container from '../Container';\n\nconst ArchivedList = () => {\n  const archivedTodos = useSelector(selectors.getArchivedTodos);\n  const dispatch = useDispatch();\n  const onArchiveTodo = id => dispatch(todosActions.toggleArchived(id));\n  return (\n    <Container>\n      <ul className={styles.list}>\n        {archivedTodos.map(\n          ({ id, name, created, category, content, dates, archived }) => {\n            return (\n              <li key={id} className={styles.todo}>\n                <Todo\n                  name={name}\n                  created={created}\n                  category={category}\n                  content={content}\n                  dates={dates}\n                  archived={archived}\n                  onArchive={() => onArchiveTodo(id)}\n                />\n              </li>\n            );\n          },\n        )}\n      </ul>\n    </Container>\n  );\n};\n\nexport default ArchivedList;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport Container from '../components/Container';\nimport TodoList from '../components/TodoList';\nimport Modal from '../components/Modal';\nimport TodoEditor from '../components/TodoEditor';\nimport StatsList from '../components/StatsList/StatsList';\nimport selectors from '../redux/todos/todos-selectors';\nimport todosActions from '../redux/todos/todos-actions';\nimport ArchivedList from '../components/ArchivedList/ArchivedList';\n\nconst TodosView = () => {\n  const dispatch = useDispatch();\n  const isModalOpened = useSelector(selectors.isModalOpened);\n  const isArchivedList = useSelector(selectors.isArchivedList);\n\n  const toggleModal = () => {\n    dispatch(todosActions.toggleModal());\n  };\n\n  return (\n    <Container>\n      <TodoList onClick={toggleModal} />\n\n      <StatsList />\n\n      {isModalOpened && (\n        <Modal>\n          {isArchivedList && <ArchivedList />}\n          {!isArchivedList && <TodoEditor onSave={toggleModal} />}\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default TodosView;\n","import TodosView from './views/TodosView';\n\nconst App = () => {\n  return <TodosView />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}